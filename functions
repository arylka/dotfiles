#!/bin/sh
#
# File: .functions
# Description:
#   contains all functions defined by the user. Separated from shell rc files
#   for portability between different machines.
#   Avoid syntax and commands not portable to other different setups,
#   check out http://hyperpolyglot.org/unix-shells for more information.

# required to check if a command exists
command -v exists &>/dev/null || alias exists='command -v &>/dev/null'

# run command in the background
function background() {
  [[ -z "$@" ]] && return 1
  "$@" &
}

# show command help with less (if it's more than one page)
function help() {
  [[ -z "$@" ]] && return 1
  "$@" --help >/dev/null 2>&1 && "$@" --help | less -FX
}

# syntax-highlighted cat
exists highlight && {
  exists ccat || function ccat() {
    # --validate-input  remove BOM, don't parse binary files
    # --t 2             replace tabs with 2 spaces
    # -I                include css style in output file
    # -O ansi           output to std output by default
    # --failsafe        if no syntax definition, copy input to output (cat-like)
    # --quiet           suppress "unknown source file extension" error
    highlight --validate-input -t 2 -I -O ansi --failsafe --quiet "$@"
  }

  function cless() {
    ccat "$@" | less -FX
  }
  alias lesh='cless -S sh'
}

# swaps two files
function swap() {
  # Check if specified 2 files
  [[ "$#" != 2 ]] && echo "Syntax: $0 <file1> <file2> ($# files provided)" && return 1

  # Check if files specified are different
  [[ "$1" == "$2" ]] && echo "Error: files must be different" && return 1

  # Check if files specified exist and are files
  [[ -f "$1" ]] || { echo "Error: '$1' does not exist or is not a valid file" && return 1 }
  [[ -f "$2" ]] || { echo "Error: '$2' does not exist or is not a valid file" && return 1 }

  # Create a temporary file
  tmpfile=$(mktemp $(dirname "$1")/XXXXXX)

  command mv "$1" "$tmpfile" && command mv "$2" "$1" && command mv "$tmpfile" "$2"
  local ret=$?

  [ $ret -eq 0 ] && echo "$1 <-> $2"
  return $ret
}

# opens zshall man page and looks for specified argument
function zman() {
  PAGER="less -g -s '+/^       "$1"'" man zshall
}

# Use:
# apt install $(apt-depends <package> [<package> ...])
function apt-depends() {
  LANG= apt-cache depends "$@" | sed -n 's/.*Depends: //p'
}

## ZSH TESTING FUNCTIONS

zsh_docker_versions() {
  local image=${1:-zshusers/zsh}
  wget -qO- https://registry.hub.docker.com/v1/repositories/${image}/tags \
    | command sed 's/[^0-9.]*"name": "\([^"]*\)"[^0-9.]*/\n\1\n/g;s/^\n//'
}

zsh_refresh_docker() {
  local version
  local image=${1:-ohmyzsh/zsh}
  zsh_docker_versions "$image" | while read version; do
    docker pull "$image:$version"
  done
}

zsh_test_versions() {
  local version
  local image=${1:-ohmyzsh/zsh}
  local version_glob=${2:-\*}
  local command="${(j:; :)@[4,-1]}"

  docker images -f "reference=$image:$version_glob" --format='{{.Tag}}' \
    | tail +1 | sort -V | while read version; do
    echo -n "$version: "
    docker run "$image:$version" zsh -c "$3" "$command"
    sleep 0.2
  done
}
